#!/usr/bin/env python

from rca import *
import sys
import os
from optparse import OptionParser

parser = OptionParser(usage='compsum',
                      version='0.01')

parser.add_option('-e',
                nargs=0,
                help = 'print only the energy')

parser.add_option('-c',
                nargs=0,
                help = 'print only the APT charges on all atoms')

parser.add_option('-m',
                nargs=0,
                help = 'print only the mulliken charges on all atoms')

parser.add_option('-g',
                nargs=0,
                help = 'print only the CHELPG charges on all atoms')

parser.add_option('-n',
                nargs=0,
                help = 'print only the NBO charges on all atoms')

parser.add_option('-f',
                nargs=0,
                help = 'print only the frequencies on all atoms')

options,args = parser.parse_args()

for arg in args:
    if not os.path.exists(arg):
        raise Exception, "File does not exist"

    calc = Cwrap(arg)

    if options.e is not None:
        print 'Energy is %0.4f eV' % calc.get_nrg()

    if options.c is not None:
        print "APT Charges"
        for i in range(0,calc.get_natoms()):
            print 'Atom %i : %i : %0.4f' % (i+1, calc.get_atm()[i], float(calc.get_chg()[i]))

    if options.m is not None:
        print "Mulliken Charges"
        for i in range(0,calc.get_natoms()):
            print 'Atom %i : %i : %0.4f' % (i+1, calc.get_atm()[i], float(calc.get_mulliken()[i]))

    if options.g is not None:
        print "CHELPG Charges"
        for i in range(0,calc.get_natoms()):
            print 'Atom %i : %i : %0.4f' % (i+1, calc.get_atm()[i], float(calc.get_chelpg()[i]))

    if options.n is not None:
        print "Natural Bonding Orbitals"
        for i in range(0,calc.get_natoms()):
            print 'Atom %i : %i : %0.4f' % (i+1, calc.get_atm()[i], float(calc.get_nbo()[i]))

    if options.f is not None:
        print 'IR Vibrational Frequency %s' % ([round(round(i,4),2) for i in calc.get_vib()])
